{"version":3,"sources":["pages/Search/components/ResultItem/ResultItem.styles.js","pages/Search/components/ResultItem/ResultItem.js","pages/Search/components/Result/Result.styles.js","pages/Search/components/Result/Result.js","asset/img/github-mark.png","pages/Search/components/SearchForm/SearchForm.styles.js","pages/Search/components/SearchForm/SearchForm.js","pages/Search/Search.js","services/github.js"],"names":["DescriptionContainer","styled","div","ResultItem","item","type","history","useHistory","xl","l","m","s","header","image","owner","avatar_url","name","actions","href","html_url","target","rel","to","pathname","login","params","description","id","node","waves","flat","onClick","push","memo","Container","LoadingContainer","Text","p","Result","useRootContext","state","dispatch","useState","results","setResults","isLoading","setIsLoading","totalPages","setTotalPages","pageSize","useEffect","getResults","a","api","get","radioValue","q","inputValue","page","per_page","data","headers","pagination","parse","link","last","Number","active","color","flashing","size","items","length","large","center","map","activePage","maxButtons","leftBtn","rightBtn","onSelect","DispatchTypes","Page","payload","RadioContainer","Image","img","SearchForm","setInputValue","setRadioValue","src","githubImg","alt","label","autoComplete","value","onChange","options","withGap","SearchParams","right","Search","axios","create","baseURL"],"mappings":"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","file":"static/js/4.9f8f48b6.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const DescriptionContainer = styled.div`\n  height: 66px;\n  box-sizing: border-box;\n  overflow: hidden;\n`;\n","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Button, Col, Card, CardTitle } from 'react-materialize';\n\nimport { DescriptionContainer } from './ResultItem.styles';\n\nexport const ResultItem = ({ item, type }) => {\n  const history = useHistory();\n\n  const handleDetailsClick = (login) =>\n    history.push({\n      pathname: `/search-hub-challenge/user/${login}`,\n      params: login,\n    });\n\n  if (type === 'repositories') {\n    return (\n      <Col key={item.id} xl={3} l={4} m={6} s={12}>\n        <Card\n          header={\n            <CardTitle image={item.owner.avatar_url}>{item.name}</CardTitle>\n          }\n          actions={[\n            <a key={1} href={item.html_url} target=\"_blank\" rel=\"noreferrer\">\n              Abrir repositório\n            </a>,\n            <Link\n              key={2}\n              to={{\n                pathname: `/search-hub-challenge/user/${item.owner.login}`,\n                params: item.owner.login,\n              }}\n            >\n              Ver proprietário\n            </Link>,\n          ]}\n        >\n          <DescriptionContainer>{item.description}</DescriptionContainer>\n        </Card>\n      </Col>\n    );\n  }\n\n  return (\n    <Col key={item.id} xl={3} l={4} m={6} s={12}>\n      <Card\n        header={<CardTitle image={item.avatar_url}>{item.login}</CardTitle>}\n      >\n        <Button\n          node=\"button\"\n          waves=\"light\"\n          flat\n          onClick={() => handleDetailsClick(item.login)}\n        >\n          Ver detalhes\n        </Button>\n      </Card>\n    </Col>\n  );\n};\n\nResultItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  type: PropTypes.oneOf(['users', 'repositories']).isRequired,\n};\n\nexport default memo(ResultItem);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 15px;\n  box-sizing: border-box;\n  flex: 1;\n  min-width: 0;\n  text-align: center;\n`;\n\nexport const LoadingContainer = styled.div`\n  padding: 15px;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  min-width: 0;\n`;\n\nexport const Text = styled.p`\n  font-size: 22px;\n`;\n","import { useEffect, useState } from 'react';\nimport parse from 'parse-link-header';\nimport { Row, Pagination, Icon, Preloader } from 'react-materialize';\n\nimport api from '../../../../services/github';\nimport { useRootContext, DispatchTypes } from '../../../../store';\nimport ResultItem from '../ResultItem';\n\nimport { Container, LoadingContainer, Text } from './Result.styles';\n\nexport const Result = () => {\n  const { state, dispatch } = useRootContext();\n  const [results, setResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [totalPages, setTotalPages] = useState(1);\n  const [pageSize] = useState(12);\n\n  const handleSelectPage = (page) =>\n    dispatch({\n      type: DispatchTypes.Page,\n      payload: {\n        page,\n      },\n    });\n\n  useEffect(() => {\n    const getResults = async () => {\n      setIsLoading(true);\n\n      const { data, headers } = await api.get(`search/${state.radioValue}`, {\n        params: {\n          q: state.inputValue,\n          page: state.page,\n          per_page: pageSize,\n        },\n      });\n\n      const pagination = parse(headers.link);\n\n      if (pagination && pagination.last) {\n        setTotalPages(Number(pagination.last.page));\n      }\n\n      setResults({ ...data, type: state.radioValue });\n      setIsLoading(false);\n    };\n\n    if (state.inputValue) {\n      getResults();\n    }\n  }, [pageSize, state.inputValue, state.page, state.radioValue]);\n\n  if (!isLoading && !results) {\n    return null;\n  }\n\n  if (isLoading) {\n    return (\n      <LoadingContainer>\n        <Preloader active color=\"blue\" flashing={false} size=\"big\" />\n        <Text>Buscando resultados...</Text>\n      </LoadingContainer>\n    );\n  }\n\n  if (results.items.length === 0) {\n    return (\n      <Container>\n        <Icon large center>\n          search_off\n        </Icon>\n        <Text>Sua busca não retornou resultados!</Text>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Row>\n        {results.items.map((item) => (\n          <ResultItem key={item.id} item={item} type={results.type} />\n        ))}\n      </Row>\n      <Pagination\n        activePage={state.page}\n        items={totalPages}\n        maxButtons={5}\n        leftBtn={<Icon>chevron_left</Icon>}\n        rightBtn={<Icon>chevron_right</Icon>}\n        onSelect={handleSelectPage}\n      />\n    </Container>\n  );\n};\n\nexport default Result;\n","export default __webpack_public_path__ + \"static/media/github-mark.c8007a9f.png\";","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-flow: column;\n  flex: 1;\n  min-width: 0;\n  margin: 0 auto;\n  padding: 15px;\n  box-sizing: border-box;\n`;\n\nexport const RadioContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  min-width: 0;\n  margin: 0 auto;\n  margin-bottom: 1rem;\n  box-sizing: border-box;\n  width: 100%;\n`;\n\nexport const Image = styled.img`\n  max-width: 25%;\n  margin: 0 auto 15px auto;\n`;\n","import { useState } from 'react';\nimport { TextInput, Button, Icon, RadioGroup } from 'react-materialize';\n\nimport githubImg from '../../../../asset/img/github-mark.png';\nimport { DispatchTypes, useRootContext } from '../../../../store';\n\nimport { Container, Image, RadioContainer } from './SearchForm.styles';\n\nexport const SearchForm = () => {\n  const { state, dispatch } = useRootContext();\n  const [inputValue, setInputValue] = useState(state.inputValue || '');\n  const [radioValue, setRadioValue] = useState(state.radioValue);\n\n  const handleClickSearchButton = () =>\n    dispatch({\n      type: DispatchTypes.SearchParams,\n      payload: {\n        inputValue,\n        radioValue,\n      },\n    });\n\n  return (\n    <Container>\n      <Image src={githubImg} alt=\"Github logo\" />\n      <TextInput\n        id=\"TextInput-4\"\n        label=\"Digite um texto para a sua busca!\"\n        autoComplete=\"off\"\n        value={inputValue}\n        onChange={({ target }) => setInputValue(target.value)}\n      />\n      <RadioContainer>\n        <RadioGroup\n          options={[\n            {\n              label: 'Usuários',\n              value: 'users',\n            },\n            {\n              label: 'Repositórios',\n              value: 'repositories',\n            },\n          ]}\n          value={radioValue}\n          onChange={({ target }) => setRadioValue(target.value)}\n          withGap\n        />\n      </RadioContainer>\n      <Button\n        node=\"button\"\n        type=\"submit\"\n        waves=\"light\"\n        onClick={handleClickSearchButton}\n      >\n        Buscar\n        <Icon right>search</Icon>\n      </Button>\n    </Container>\n  );\n};\n\nexport default SearchForm;\n","import Result from './components/Result';\nimport SearchForm from './components/SearchForm';\n\nexport const Search = () => (\n  <>\n    <SearchForm />\n    <Result />\n  </>\n);\n\nexport default Search;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/',\n});\n\nexport default api;\n"],"sourceRoot":""}