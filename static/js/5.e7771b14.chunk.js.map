{"version":3,"sources":["pages/User/components/Information/Information.styles.js","pages/User/components/Information/Information.js","pages/User/components/RepositoriesItem/RepositoriesItem.styles.js","pages/User/components/RepositoriesItem/RepositoriesItem.js","pages/User/components/Repositories/Repositories.styles.js","pages/User/components/Repositories/Repositories.js","pages/User/User.styles.js","pages/User/User.js","services/github.js"],"names":["Title","styled","h3","props","fontSize","Description","p","Information","title","description","defaultProps","memo","CollectionItemStyled","CollectionItem","ButtonContainer","div","InformationContainer","RepositoriesItem","item","showOwner","name","owner","login","language","stargazers_count","href","html_url","node","waves","target","right","LoadingContainer","Text","Repositories","header","trigger","endpoint","useState","repositories","setRepositories","isLoading","setIsLoading","page","setPage","pageSize","totalPages","setTotalPages","isOpen","setIsOpen","useEffect","a","api","get","params","per_page","data","headers","pagination","parse","link","last","Number","getReposList","actions","flat","modal","bottomSheet","fixedFooter","id","open","options","dismissible","endingTop","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","opacity","outDuration","preventScrolling","startingTop","active","color","flashing","size","s","map","activePage","items","maxButtons","leftBtn","rightBtn","onSelect","newPage","h1","theme","colors","white","ButtonStyled","Button","darkGrey","grey","UserContainer","ParallaxContainer","ContainerButtons","Container","User","useParams","goBack","useHistory","user","setUser","response","getUser","icon","onClick","image","alt","src","avatar_url","responsiveThreshold","bio","location","company","blog","email","followers","following","axios","create","baseURL"],"mappings":"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","file":"static/js/5.e7771b14.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  font-size: ${(props) => (props.fontSize === 'small' ? '1.32rem' : '2.92rem')};\n  margin: ${(props) =>\n    props.fontSize === 'small' ? '0' : '1.9466666667rem 0 1rem 0'};\n  box-sizing: border-box;\n`;\n\nexport const Description = styled.p`\n  display: block;\n  padding-left: 20px;\n  margin: ${(props) =>\n    props.fontSize === 'small' ? '0 0 1rem 0' : '1rem 0 1rem 0'};\n  box-sizing: border-box;\n`;\n","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, Description } from './Information.styles';\n\nexport const Information = ({ title, description, fontSize }) => {\n  if (!description) {\n    return null;\n  }\n\n  return (\n    <>\n      <Title fontSize={fontSize}>{title}</Title>\n      <Description fontSize={fontSize}>{description}</Description>\n    </>\n  );\n};\n\nInformation.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fontSize: PropTypes.string,\n};\n\nInformation.defaultProps = {\n  fontSize: 'normal',\n  title: '',\n  description: '',\n};\n\nexport default memo(Information);\n","import styled from 'styled-components';\nimport { CollectionItem } from 'react-materialize';\n\nexport const CollectionItemStyled = styled(CollectionItem)`\n  display: flex;\n  justify-content: space-between;\n  flex-flow: column;\n  @media (min-width: 600px) {\n    flex-flow: row;\n    align-items: center;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  flex: 0 0 auto;\n  min-width: 0;\n`;\n\nexport const InformationContainer = styled.div`\n  margin-right: 15px;\n  flex: 1;\n  min-width: 0;\n`;\n","import { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Icon } from 'react-materialize';\n\nimport Information from '../Information';\n\nimport {\n  CollectionItemStyled,\n  InformationContainer,\n  ButtonContainer,\n} from './RepositoriesItem.styles';\n\nexport const RepositoriesItem = ({ item, showOwner }) => (\n  <CollectionItemStyled>\n    <InformationContainer>\n      <Information title=\"Nome\" description={item.name} fontSize=\"small\" />\n      {showOwner && (\n        <Information\n          title=\"Proprietário\"\n          description={item.owner.login}\n          fontSize=\"small\"\n        />\n      )}\n      <Information\n        title=\"Descrição\"\n        description={item.description}\n        fontSize=\"small\"\n      />\n      <Information\n        title=\"Linguagem\"\n        description={item.language}\n        fontSize=\"small\"\n      />\n      <Information\n        title=\"Estrelas\"\n        description={item.stargazers_count}\n        fontSize=\"small\"\n      />\n    </InformationContainer>\n    <ButtonContainer>\n      <Button href={item.html_url} node=\"a\" waves=\"light\" target=\"_blank\">\n        Abrir repositório\n        <Icon right>cloud</Icon>\n      </Button>\n    </ButtonContainer>\n  </CollectionItemStyled>\n);\n\nRepositoriesItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  showOwner: PropTypes.bool,\n};\n\nRepositoriesItem.defaultProps = {\n  showOwner: false,\n};\n\nexport default memo(RepositoriesItem);\n","import styled from 'styled-components';\n\nexport const LoadingContainer = styled.div`\n  padding: 15px;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  min-width: 0;\n`;\n\nexport const Text = styled.p`\n  font-size: 22px;\n`;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport parse from 'parse-link-header';\nimport {\n  Modal,\n  Button,\n  Row,\n  Col,\n  Collection,\n  Icon,\n  Pagination,\n  Preloader,\n} from 'react-materialize';\n\nimport RepositoriesItem from '../RepositoriesItem';\nimport api from '../../../../services/github';\n\nimport { LoadingContainer, Text } from './Repositories.styles';\n\nexport const Repositories = ({\n  login,\n  header,\n  trigger,\n  endpoint,\n  showOwner,\n}) => {\n  const [repositories, setRepositories] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [pageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    const getReposList = async () => {\n      setIsLoading(true);\n\n      const { data, headers } = await api.get(`/users/${login}/${endpoint}`, {\n        params: {\n          page,\n          per_page: pageSize,\n        },\n      });\n\n      const pagination = parse(headers.link);\n\n      if (pagination && pagination.last) {\n        setTotalPages(Number(pagination.last.page));\n      }\n\n      setRepositories(data);\n      setIsLoading(false);\n    };\n\n    if (isOpen) {\n      getReposList();\n    }\n  }, [endpoint, isOpen, login, page, pageSize]);\n\n  return (\n    <Modal\n      actions={[\n        <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n          Fechar\n        </Button>,\n      ]}\n      bottomSheet\n      fixedFooter={false}\n      header={header}\n      id={`Modal-repos-${endpoint}`}\n      open={false}\n      options={{\n        dismissible: true,\n        endingTop: '10%',\n        inDuration: 250,\n        onCloseEnd: null,\n        onCloseStart: null,\n        onOpenEnd: () => setIsOpen(true),\n        onOpenStart: null,\n        opacity: 0.5,\n        outDuration: 250,\n        preventScrolling: true,\n        startingTop: '4%',\n      }}\n      trigger={<Button node=\"button\">{trigger}</Button>}\n    >\n      {isLoading && (\n        <LoadingContainer>\n          <Preloader active color=\"blue\" flashing={false} size=\"big\" />\n          <Text>Buscando items...</Text>\n        </LoadingContainer>\n      )}\n      {repositories && !isLoading && (\n        <>\n          <Row>\n            <Col s={12}>\n              <Collection>\n                {repositories.map((item) => (\n                  <RepositoriesItem\n                    key={item.id}\n                    item={item}\n                    showOwner={showOwner}\n                  />\n                ))}\n              </Collection>\n            </Col>\n          </Row>\n          <Pagination\n            activePage={page}\n            items={totalPages}\n            maxButtons={5}\n            leftBtn={<Icon>chevron_left</Icon>}\n            rightBtn={<Icon>chevron_right</Icon>}\n            onSelect={(newPage) => setPage(newPage)}\n          />\n        </>\n      )}\n    </Modal>\n  );\n};\n\nRepositories.propTypes = {\n  login: PropTypes.string.isRequired,\n  header: PropTypes.string,\n  trigger: PropTypes.string,\n  endpoint: PropTypes.string.isRequired,\n  showOwner: PropTypes.bool,\n};\n\nRepositories.defaultProps = {\n  showOwner: false,\n  header: '',\n  trigger: '',\n};\n\nexport default Repositories;\n","import styled from 'styled-components';\nimport { Button } from 'react-materialize';\n\nexport const Title = styled.h1`\n  position: absolute;\n  top: 0;\n  left: 15px;\n  color: ${(props) => props.theme.colors.white};\n`;\n\nexport const Text = styled.p`\n  font-size: 22px;\n`;\n\nexport const ButtonStyled = styled(Button)`\n  position: absolute;\n  top: 5px;\n  left: 15px;\n  color: ${(props) => props.theme.colors.darkGrey};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${(props) => props.theme.colors.grey};\n`;\n\nexport const UserContainer = styled.div`\n  flex: 1;\n`;\n\nexport const ParallaxContainer = styled.div``;\n\nexport const ContainerButtons = styled.div`\n  display: inline-block;\n  margin-right: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Container = styled.div`\n  padding: 15px;\n`;\n\nexport const LoadingContainer = styled.div`\n  padding: 15px;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  min-width: 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Parallax, Icon, Preloader } from 'react-materialize';\n\nimport api from '../../services/github';\nimport Information from './components/Information';\nimport Repositories from './components/Repositories';\n\nimport {\n  Title,\n  ParallaxContainer,\n  Container,\n  ContainerButtons,\n  ButtonStyled,\n  UserContainer,\n  LoadingContainer,\n  Text,\n} from './User.styles';\n\nexport const User = () => {\n  const { login } = useParams();\n  const { goBack } = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const getUser = async () => {\n      setIsLoading(true);\n\n      const response = await api.get(`/users/${login}`);\n\n      setUser(response.data);\n      setIsLoading(false);\n    };\n\n    getUser();\n  }, [login]);\n\n  if (isLoading) {\n    return (\n      <LoadingContainer>\n        <Preloader active color=\"blue\" flashing={false} size=\"big\" />\n        <Text>Buscando usuário...</Text>\n      </LoadingContainer>\n    );\n  }\n\n  return (\n    <UserContainer>\n      <ButtonStyled\n        flat\n        node=\"button\"\n        waves=\"light\"\n        icon={<Icon>arrow_back</Icon>}\n        onClick={() => goBack()}\n      >\n        Voltar\n      </ButtonStyled>\n      <Title>{user.name}</Title>\n\n      <ParallaxContainer>\n        <Parallax\n          image={<img alt=\"Avatar\" src={user.avatar_url} />}\n          options={{\n            responsiveThreshold: 0,\n          }}\n        />\n      </ParallaxContainer>\n\n      <Container>\n        <Information title=\"Login\" description={user.login} />\n        <Information title=\"Biografia\" description={user.bio} />\n        <Information title=\"Local\" description={user.location} />\n        <Information title=\"Empresa\" description={user.company} />\n        <Information title=\"Blog\" description={user.blog} />\n        <Information title=\"E-mail\" description={user.email} />\n        <Information\n          title=\"Número de seguidores\"\n          description={user.followers}\n        />\n        <Information title=\"Seguindo\" description={user.following} />\n\n        <ContainerButtons>\n          <Repositories\n            login={login}\n            endpoint=\"repos\"\n            trigger=\"Ver repositórios do usuário\"\n            header=\"Lista de repositórios do usuário\"\n          />\n        </ContainerButtons>\n\n        <Repositories\n          login={login}\n          endpoint=\"starred\"\n          trigger=\"Ver repositórios marcados com estrela\"\n          header=\"Lista de repositórios marcados com estrela pelo usuário\"\n          showOwner\n        />\n      </Container>\n    </UserContainer>\n  );\n};\n\nexport default User;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/',\n});\n\nexport default api;\n"],"sourceRoot":""}